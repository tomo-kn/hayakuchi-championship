version: 2.1

orbs:
  ruby: circleci/ruby@1.8.0
  node: circleci/node@5.0.2
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@2.3.0

jobs:
  test_backend:
    docker:
      - image: cimg/ruby:3.1.2-node
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: cimg/mysql:8.0.28

    working_directory: ~/repo

    steps:
      - checkout

      # restore gem from cache
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "~/repo/Gemfile.lock" }}
            - gem-cache-v1-
          working_directory: ~/repo

      # gem install
      - run:
          command: |
            gem install bundler -v 2.3.16
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
          working_directory: ~/repo

      - save_cache:
          key: gem-cache-v1-{{ checksum "~/repo/Gemfile.lock" }}
          paths:
            - ~/repo/vendor/bundle
          working_directory: ~/repo

      # Database setup
      - run:
          command: bundle exec rails db:create
          working_directory: ~/repo
      - run:
          command: bundle exec rails db:migrate
          working_directory: ~/repo

      - run:
          name: create directory to store test results
          command: mkdir /tmp/test-results
          working_directory: ~/repo
      
      - run:
          name: yarn Install
          command: yarn install

      # run tests
      - run:
          name: RSpec
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
              || (printf "====== RETRYING...\n\n\n"; bundle exec rspec --only-failures)
          working_directory: ~/repo

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /home/circleci/repo/tmp/screenshots

  build_and_push_image_backend:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - aws-ecr/build-and-push-image:
          account-url: AWS_ACCOUNT_URL
          repo: "hayakuchi-championship"
          region: AWS_REGION
          tag: "${CIRCLE_SHA1}"
          path: ./




workflows:
  version: 2
  test:
    jobs:
      - test_backend:
          filters:
            branches:
              ignore: main

  test_and_deploy:
    jobs:
      - test_backend:
          filters:
            branches:
              only: main
      - build_and_push_image_backend:
          requires:
            - test_backend
          filters:
            branches:
              only: main
      - aws-ecs/deploy-service-update:
          requires:
            - build_and_push_image_backend
          family: "hayakuchi-championship-task"
          service-name: "hayakuchi-championship-service"
          cluster-name: "hayakuchi-championship-cluster"
          container-image-name-updates: "container=hayakuchi-championship-container,tag=${CIRCLE_SHA1}"
          filters:
            branches:
              only: main